{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","props","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"yLAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAqCC,mBAAS,IAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KAmBA,OAEI,sBAAMC,SAfU,SAACC,GACjBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAUlB,SACI,uBACAO,KAAK,OACLC,MAAUT,EACVU,SAvBY,SAACP,GACjBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0FAC6EC,UAAUH,GADvF,sBAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EACtB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAT3B,kBAaZM,GAbY,4CAAH,sDCAPO,EAAc,SAACC,GAExB,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAMd,IAAKiB,IAAOH,EAAMJ,QAClC,kCAAKI,EAAMJ,MAAX,WCDCQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAEtB,ECJwB,SAAEA,GAE7B,MAA0Bd,mBACtB,CACAqB,KAAO,GACPc,SAAS,IAHb,mBAAOC,EAAP,KAAcC,EAAd,KAwBA,OAjBDC,qBAAU,WACNzB,EAASC,GAAWyB,MAChB,SAAAC,GAGQH,EACI,CACIhB,KAAOmB,EACPL,SAAS,SAO/B,CAACrB,IAEKsB,EDtB2BK,CAAc3B,GAAjCa,EAAZ,EAAON,KAAac,EAApB,EAAoBA,QAGpB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDjB,IAEnD,mBAAGiB,UAAU,mCAAb,SAAiDI,GAAW,eAE5D,qBAAKJ,UAAU,YAAf,SAEI,6BAEQJ,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADEA,EAAIC,eEnBzBiB,EAAe,WAIxB,MAAqC1C,mBAAS,CAAC,cAA/C,mBAAQ2C,EAAR,KAAoB5C,EAApB,KAMA,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAiBA,IAG9B,6BAEQ4C,EAAWpB,KAAK,SAACqB,GAAD,OACb,cAAC,EAAD,CAEK9B,SAAY8B,GADNA,Y,MClBlCC,IAASC,OAEL,cAAC,EAAD,IACDC,SAASC,eAAe,W","file":"static/js/main.480bd9ba.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( {setCategories} ) => {\n\n    const [inputValue, setInputValue ] = useState('');\n\n    const handleInput = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSumit = (e) => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 2 ){\n            setCategories( cats => [inputValue, ...cats] );\n            setInputValue('');\n        }\n        \n        \n    }\n\n\n\n    return (\n        \n        <form onSubmit= { handleSumit}>\n            <input \n            type=\"text\"\n            value = { inputValue}\n            onChange = { handleInput }\n           />\n        </form>\n           \n        \n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\n\nexport const getGifs = async( category ) => { \n    const url = `https://api.giphy.com/v1/gifs/search?api_key=EZXEbt77aJM3kd12HvYBOGZAwyvd0jAQ&q=${ encodeURI(category) }&limit=10`\n    const resp = await fetch (url);\n    const {data} = await resp.json();\n\n    const gifs = data.map( img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n            }\n        }\n    )\n    return gifs;\n}\n","import React from 'react'\n\nexport const GifGridItem = (props) => {\n\n    return (\n        <div className=\"animate__animated animate__fadeIn card\">\n            <img src={props.url} alt = {props.title}/>\n            <p> {props.title} </p>\n           \n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\n\n\nexport const GifGrid = ({ category }) => {\n\n    const {data:images, loading} = useFetchGifs( category );\n\n   \n    return (\n        <>\n        <h3 className=\"animate__animated animate__fadeIn\">{category }</h3>\n\n        <p className=\"animate__animated animate__flash\">{loading && 'Cargando..'}</p>\n\n        <div className=\"card-grid\">\n            \n            <ol>\n                {\n                    images.map( img => (\n                        <GifGridItem \n                           key = {img.id} \n                           { ...img } />\n                    ))\n                }\n            </ol>\n        </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = ( category ) => {\n    \n const [state, setstate] = useState(\n     {\n     data : [],\n     loading: true\n     }\n );\n\nuseEffect(()=>{\n    getGifs( category ).then(\n        imgs => {\n\n           \n                setstate(\n                    {\n                        data : imgs,\n                        loading: false \n                    }\n                );\n           \n            \n        }\n    )\n},[category ]);\n\n return state;\n\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n\n    //const categories = ['One Punch','Samurai x','Dragon Ball']\n    const [ categories, setCategories ]= useState(['One Punch']);\n\n    // const handleAdd = () =>{\n    //     setCategories( [...categories, 'bleach'] );\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <hr/>\n            <AddCategory setCategories= { setCategories} />\n\n\n            <ol>\n                {\n                    categories.map( (cat) => \n                       <GifGrid \n                            key={ cat }\n                            category = {cat }\n                       />\n                    )\n                }\n\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n   document.getElementById('root')\n);\n\n"],"sourceRoot":""}